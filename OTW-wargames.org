#+TITLE: OTW Wargames
- copy the password from this file
  in normal mode: y i w
- paste the password Ctrl-Shift-v

* Bandit
** Level 0
- password for level 1
boJ9jbbUNNfktd78OOpsqOltutMc3MY1
boJ9jbbUNNfktd78OOpsqOltutMc3MY1
** level 1
- the password is in the file called -
- to get the contents run:
$ cat < -
CV1DtqXWVFXTvM2F0k09SHz0YwRINYA9
** level 2
- spaces in a file name
- tab completion
- trying to teach escape characters

  $ cat <tab>
  $ cat spaces\ in\ this\ filename
UmHadQclWmgdLOKQ3YNgjWxGoRMb5luK
** level 3
- open the hidden file inside the directory
 $ cd inhere
 $ ls -al
 $ cat .hidden
pIwrPrtPN36QITSp3EQaw936yaFoFgAB
** level 4
- cd inhere
- make a list of the files in the temp directory
  $ mktemp -d
  $ ls > /tmp/tmp.rkRZuxAeUB/list
- run the file comannd on the list to determine the human readable files
  ~/inhere$ file -f /tmp/tmp.rkRZuxAeUB/list
  koReBOKuIDDepwhWk7jZC0RTdopnAYKh
** level 5
- filter the file system for human-readable, 1033 bytes, and non-executable
  $ du -ab | grep 1033
  DXjZPULLxYr17uwoI01bNLQbtFemEgo7
** level 6
du -ab | grep 33
find / -user bandit7 -group bandit6 -size 33c 2>&1 | grep -F -v Permission | grep -F -v directory
    /var/lib/dpkg/info/bandit7.password
HKBPTKQnIay4Fw76bEy8PVxKEDQRKTzs
** Level 7
grep millionth data.txt
cvX2JJa4CFALtqS87jk27qwqGhBM9plV
** Level 8
cat data.txt | sort | uniq -c -u
UsvVyFSfZZWbi6wgC7dAFyFuR6jQQUhR
** Level 9
cat data.txt | strings | grep ==
strings data.txt | grep ====
    ========== the*2i"4
    ========== password
    Z)========== is
    &========== truKLdjsbJ5g7yyJ2X2R0o3a5HQJFuLk
    truKLdjsbJ5g7yyJ2X2R0o3a5HQJFuLk
** Level 10
cat data.txt | base64 -d
The password is IFukwKGsFW8MOq3IRFqrxE1hxTNEbUPR

** Level 11
*** The password for the next level is stored in the file data.txt, where all lowercase (a-z) and uppercase (A-Z) letters have been rotated by 13 positions
Commands you may need to solve this level

grep, sort, uniq, strings, base64, tr, tar, gzip, bzip2, xxd
Helpful Reading Material

    Rot13 on Wikipedia

*** cat data.txt | tr a-zA-Z n-za-mN-ZA-M
    The password is 5Te8Y4drgCRfCx8ugdwuEX8KFC6k2EUu
*** 5Te8Y4drgCRfCx8ugdwuEX8KFC6k2EUu
** Level 12
*** Level Goal

The password for the next level is stored in the file data.txt, which is a hexdump of a file that has been repeatedly compressed. For this level it may be useful to create a directory under /tmp in which you can work using mkdir. For example: mkdir /tmp/myname123. Then copy the datafile using cp, and rename it using mv (read the manpages!)
*** Commands you may need to solve this level

grep, sort, uniq, strings, base64, tr, tar, gzip, bzip2, xxd, mkdir, cp, mv, file
*** Helpful Reading Material

    Hex dump on Wikipedia
*** History
bandit12@bandit:/tmp/tmp.6Yl4BheVgi$ history
    1  ls
    2  cat data.txt
    3  mktemp -d
    4  cd /tmp/tmp.6Yl4BheVgi
    5  cp ~/data.txt .
    6  ls
    7  cp data.txt data1
    8  file data1
    9  ls
   10  rm data1
   11  ls
   12  cat data.txt
   13  file data.txt
   14  xxd -r data.txt datahex
   15  file datahex
   16  mv datahex data2.gz
   17  gzip -d data2.gz
   18  ls
   19  cat data2
   20  file data2
   21  mv data2 data3.bz2 | bzip2 -d data3.bz2
   22  mv data2 data3.bz2
   23  ls
   24  file data3.bz2
   25  bzip2 -d data3.bz2
   26  ls
   27  file data3
   28  mv data3 data4.gz
   29  gzip -d data4.gz
   30  file data4
   31  tar -xvf data4
   32  file data5.bin
   33  tar -xvf data5.bin
   34  file data6.bin
   35  mv data6.bin data7.bz2
   36  ls
   37  history
   38  bzip2 -d data7.bz2
   39  ls
   40  file data7
   41  tar -xvf data7
   42  file data8.bin
   43  mv data8.bin data9.gz
   44  gzip -d data9.gz
   45  file data9
   46  cat data9
   47  history


*** The password is 8ZjyCRiBWFYkneahHwxCv3wb2a1ORpYL
** Level 13
*** Level Goal

The password for the next level is stored in /etc/bandit_pass/bandit14 and can only be read by user bandit14. For this level, you don’t get the next password, but you get a private SSH key that can be used to log into the next level. Note: localhost is a hostname that refers to the machine you are working on
*** Commands you may need to solve this level

ssh, telnet, nc, openssl, s_client, nmap
*** Helpful Reading Material

    SSH/OpenSSH/Keys
*** Write-up

ssh bandit14@localhost -i sshkey.private
cd /etc/bandit_pass
ls
cd bandit14
cat bandit14
4wcYUJFw0k0XLShlDzztnTBHiqxU3b3e
*** 4wcYUJFw0k0XLShlDzztnTBHiqxU3b3e
** Level 14
*** Level Goal

The password for the next level can be retrieved by submitting the password of the current level to port 30000 on localhost.
Commands you may need to solve this level

ssh, telnet, nc, openssl, s_client, nmap
*** Helpful Reading Material

    How the Internet works in 5 minutes (YouTube) (Not completely accurate, but good enough for beginners)
    IP Addresses
    IP Address on Wikipedia
    Localhost on Wikipedia
    Ports
    Port (computer networking) on Wikipedia
*** Write-up
bandit14@bandit:/etc/bandit_pass$ telnet localhost 30000
Trying 127.0.0.1...
Connected to localhost.
Escape character is '^]'.
4wcYUJFw0k0XLShlDzztnTBHiqxU3b3e
Correct!
BfMYroe26WYalil77FoDi9qh59eK5xNr

Connection closed by foreign host.
*** BfMYroe26WYalil77FoDi9qh59eK5xNr
** Level 15
*** Level Goal

The password for the next level can be retrieved by submitting the password of the current level to port 30001 on localhost using SSL encryption.

Helpful note: Getting “HEARTBEATING” and “Read R BLOCK”? Use -ign_eof and read the “CONNECTED COMMANDS” section in the manpage. Next to ‘R’ and ‘Q’, the ‘B’ command also works in this version of that command…
*** Commands you may need to solve this level

ssh, telnet, nc, openssl, s_client, nmap
*** Helpful Reading Material

    Secure Socket Layer/Transport Layer Security on Wikipedia
    OpenSSL Cookbook - Testing with OpenSSL


*** Write-up
bandit15@bandit:~$ openssl s_client -connect localhost:30001 -ign_eof
CONNECTED(00000003)
depth=0 CN = localhost
verify error:num=18:self signed certificate
verify return:1
depth=0 CN = localhost
verify return:1
---
Certificate chain
 0 s:/CN=localhost
   i:/CN=localhost
---
Server certificate
-----BEGIN CERTIFICATE-----
MIICBjCCAW+gAwIBAgIEZOzuVDANBgkqhkiG9w0BAQUFADAUMRIwEAYDVQQDDAls
b2NhbGhvc3QwHhcNMjEwOTMwMDQ0NTU0WhcNMjIwOTMwMDQ0NTU0WjAUMRIwEAYD
VQQDDAlsb2NhbGhvc3QwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAM9En7CC
uPr6cVPATLAVhWMU1hggfIJEp5sZN9RPUbK0zKBv802yD54ObHYmIge6lqqkgXOz
2AuI4UfCG4iMb0UYUCA/wISwNqUQrjcja0OnqzCTRscXzzoIsHbC8lGFzMDRz3Jw
8nBD6/2jvFt1rnBtZ4ghibNn5rFHRi5EC+K/AgMBAAGjZTBjMBQGA1UdEQQNMAuC
CWxvY2FsaG9zdDBLBglghkgBhvhCAQ0EPhY8QXV0b21hdGljYWxseSBnZW5lcmF0
ZWQgYnkgTmNhdC4gU2VlIGh0dHBzOi8vbm1hcC5vcmcvbmNhdC8uMA0GCSqGSIb3
DQEBBQUAA4GBAD7/moj14DUI6/D6imJ8pQlAy/8lZlsrbyRnqpzjWaATShDYr7k3
umdRg+36MciNFAglE7nGYZroTSDCm650D81+797owSXLPAdp1Q6JfQH5LOni2kbw
UHcO9hwQ+rJzEgIlfGOic7dC5lj8DBU5tugY87RZGKiZ2GG77WXas9Iz
-----END CERTIFICATE-----
subject=/CN=localhost
issuer=/CN=localhost
---
No client certificate CA names sent
Peer signing digest: SHA512
Server Temp Key: X25519, 253 bits
---
SSL handshake has read 1019 bytes and written 269 bytes
Verification error: self signed certificate
---
New, TLSv1.2, Cipher is ECDHE-RSA-AES256-GCM-SHA384
Server public key is 1024 bit
Secure Renegotiation IS supported
Compression: NONE
Expansion: NONE
No ALPN negotiated
SSL-Session:
    Protocol  : TLSv1.2
    Cipher    : ECDHE-RSA-AES256-GCM-SHA384
    Session-ID: 086C3288DD2D3ED5D6EF658552B134010E4C19DDFF0853465770A1B9DEC9BC03
    Session-ID-ctx:
    Master-Key: E367FBA6D174D367971B2B28BA913B1BFB782E401C2507DF533AAE767A5FB6573E545AACAB244B0B16FCB47669E64D6E
    PSK identity: None
    PSK identity hint: None
    SRP username: None
    TLS session ticket lifetime hint: 7200 (seconds)
    TLS session ticket:
    0000 - 8a eb e8 f5 31 15 46 ad-b2 a8 10 c1 51 b9 66 14   ....1.F.....Q.f.
    0010 - 51 38 4e 6a fe ae 2e 01-00 dc a1 f5 d1 18 3b 04   Q8Nj..........;.
    0020 - 50 5a 73 e9 76 84 76 5f-8c b5 a9 a9 cd ab 44 af   PZs.v.v_......D.
    0030 - 0e 3a 95 81 6f 44 a9 24-c9 bc 2e 52 b8 9c 4e c4   .:..oD.$...R..N.
    0040 - 33 8d 25 d4 10 cd c0 bd-5d a5 ce 23 73 13 d5 30   3.%.....]..#s..0
    0050 - 20 6a 0f 29 2d d7 ba c9-44 95 73 58 49 c0 57 3d    j.)-...D.sXI.W=
    0060 - b2 d4 ca f2 66 16 75 0c-9b 50 db 66 ca 9b 3f 13   ....f.u..P.f..?.
    0070 - 46 b7 7e f5 c2 4a 45 6b-d7 ed 29 2b a8 80 87 69   F.~..JEk..)+...i
    0080 - 07 d1 f7 ae fe be 17 90-3e 22 14 b1 99 b8 13 be   ........>"......
    0090 - 7a 1b 89 54 11 df c1 23-a6 9b 05 f4 a1 61 29 4f   z..T...#.....a)O

    Start Time: 1645544857
    Timeout   : 7200 (sec)
    Verify return code: 18 (self signed certificate)
    Extended master secret: yes
---
BfMYroe26WYalil77FoDi9qh59eK5xNr
Correct!
cluFn7wTiGryunymYOu4RcffSxQluehd

closed
*** cluFn7wTiGryunymYOu4RcffSxQluehd
** Level 16
*** Level Goal

The credentials for the next level can be retrieved by submitting the password of the current level to a port on localhost in the range 31000 to 32000. First find out which of these ports have a server listening on them. Then find out which of those speak SSL and which don’t. There is only 1 server that will give the next credentials, the others will simply send back to you whatever you send to it.
*** Commands you may need to solve this level

ssh, telnet, nc, openssl, s_client, nmap
*** Helpful Reading Material

    Port scanner on Wikipedia
*** Write-up
$ nmap -A -sV -T4 -p31000-32000 localhost

31790/tcp open  ssl/unknown
| fingerprint-strings:                                                                                                                                       |
| FourOhFourRequest, GenericLines, GetRequest, HTTPOptions, Help, Kerberos, LDAPSearchReq, LPDString, RTSPRequest, SIPOptions, SSLSessionReq, TLSSessionReq: |
| _    Wrong! Please enter the correct current password                                                                                                      |

- port 31790 is open
    openssl s_client -connect localhost:31790
      - input bandit16 password
---
cluFn7wTiGryunymYOu4RcffSxQluehd
Correct!
-----BEGIN RSA PRIVATE KEY-----
MIIEogIBAAKCAQEAvmOkuifmMg6HL2YPIOjon6iWfbp7c3jx34YkYWqUH57SUdyJ
imZzeyGC0gtZPGujUSxiJSWI/oTqexh+cAMTSMlOJf7+BrJObArnxd9Y7YT2bRPQ
Ja6Lzb558YW3FZl87ORiO+rW4LCDCNd2lUvLE/GL2GWyuKN0K5iCd5TbtJzEkQTu
DSt2mcNn4rhAL+JFr56o4T6z8WWAW18BR6yGrMq7Q/kALHYW3OekePQAzL0VUYbW
JGTi65CxbCnzc/w4+mqQyvmzpWtMAzJTzAzQxNbkR2MBGySxDLrjg0LWN6sK7wNX
x0YVztz/zbIkPjfkU1jHS+9EbVNj+D1XFOJuaQIDAQABAoIBABagpxpM1aoLWfvD
KHcj10nqcoBc4oE11aFYQwik7xfW+24pRNuDE6SFthOar69jp5RlLwD1NhPx3iBl
J9nOM8OJ0VToum43UOS8YxF8WwhXriYGnc1sskbwpXOUDc9uX4+UESzH22P29ovd
d8WErY0gPxun8pbJLmxkAtWNhpMvfe0050vk9TL5wqbu9AlbssgTcCXkMQnPw9nC
YNN6DDP2lbcBrvgT9YCNL6C+ZKufD52yOQ9qOkwFTEQpjtF4uNtJom+asvlpmS8A
vLY9r60wYSvmZhNqBUrj7lyCtXMIu1kkd4w7F77k+DjHoAXyxcUp1DGL51sOmama
+TOWWgECgYEA8JtPxP0GRJ+IQkX262jM3dEIkza8ky5moIwUqYdsx0NxHgRRhORT
8c8hAuRBb2G82so8vUHk/fur85OEfc9TncnCY2crpoqsghifKLxrLgtT+qDpfZnx
SatLdt8GfQ85yA7hnWWJ2MxF3NaeSDm75Lsm+tBbAiyc9P2jGRNtMSkCgYEAypHd
HCctNi/FwjulhttFx/rHYKhLidZDFYeiE/v45bN4yFm8x7R/b0iE7KaszX+Exdvt
SghaTdcG0Knyw1bpJVyusavPzpaJMjdJ6tcFhVAbAjm7enCIvGCSx+X3l5SiWg0A
R57hJglezIiVjv3aGwHwvlZvtszK6zV6oXFAu0ECgYAbjo46T4hyP5tJi93V5HDi
Ttiek7xRVxUl+iU7rWkGAXFpMLFteQEsRr7PJ/lemmEY5eTDAFMLy9FL2m9oQWCg
R8VdwSk8r9FGLS+9aKcV5PI/WEKlwgXinB3OhYimtiG2Cg5JCqIZFHxD6MjEGOiu
L8ktHMPvodBwNsSBULpG0QKBgBAplTfC1HOnWiMGOU3KPwYWt0O6CdTkmJOmL8Ni
blh9elyZ9FsGxsgtRBXRsqXuz7wtsQAgLHxbdLq/ZJQ7YfzOKU4ZxEnabvXnvWkU
YOdjHdSOoKvDQNWu6ucyLRAWFuISeXw9a/9p7ftpxm0TSgyvmfLF2MIAEwyzRqaM
77pBAoGAMmjmIJdjp+Ez8duyn3ieo36yrttF5NSsJLAbxFpdlc1gvtGCWW+9Cq0b
dxviW8+TFVEBl1O4f7HVm6EpTscdDxU+bCXWkfjuRb7Dy9GOtt9JPsX8MBTakzh3
vBgsyi/sN3RqRBcGU40fOoZyfAMT8s1m/uYv52O6IgeuZ/ujbjY=
-----END RSA PRIVATE KEY-----

closed

- Create the private key that was found and use it to connect to bandit17

    bandit16@bandit:~$ mktemp -d
        /tmp/tmp.DuKX2dfRq2
    bandit16@bandit:~$ cd /tmp/tmp.DuKX2dfRq2
    bandit16@bandit:/tmp/tmp.DuKX2dfRq2$ vi bandit16.private
    bandit16@bandit:/tmp/tmp.DuKX2dfRq2$ chmod 600 bandit16.private
- copy paste with vi was causing problems wih the formatting but using nano did the trick
    bandit16@bandit:/tmp/tmp.ppWTCtsYJH$ nano bandit17
    Unable to create directory /home/bandit16/.nano: Permission denied
    It is required for saving/loading search history or cursor positions.

    Press Enter to continue

    bandit16@bandit:/tmp/tmp.ppWTCtsYJH$ ls
    bandit17
    bandit16@bandit:/tmp/tmp.ppWTCtsYJH$ chmod 600 bandit17
    bandit16@bandit:/tmp/tmp.ppWTCtsYJH$ ssh -i bandit17 bandit17@localhost
** Level 17
*** Level Goal

There are 2 files in the homedirectory: passwords.old and passwords.new. The password for the next level is in passwords.new and is the only line that has been changed between passwords.old and passwords.new

NOTE: if you have solved this level and see ‘Byebye!’ when trying to log into bandit18, this is related to the next level, bandit19
*** Commands you may need to solve this level

cat, grep, ls, diff
*** Write-up
bandit17@bandit:~$ diff passwords.old passwords.new
42c42
< w0Yfolrc5bwjS4qw5mq1nnQi6mF03bii
---
> kfBf3eYk5BPBRzwjqutbbfE887SVc5Yd
** Level 18
*** Level Goal

The password for the next level is stored in a file readme in the homedirectory. Unfortunately, someone has modified .bashrc to log you out when you log in with SSH.
*** Commands you may need to solve this level

ssh, ls, cat
*** Write-up
ssh -p 2220 bandit18@bandit.labs.overthewire.org ls -lh
This is a OverTheWire game server. More information on http://www.overthewire.org/wargames

bandit18@bandit.labs.overthewire.org's password:
total 4.0K
-rw-r----- 1 bandit19 bandit18 33 May  7  2020 readme
    ~  ssh -p 2220 bandit18@bandit.labs.overthewire.org cat readme
This is a OverTheWire game server. More information on http://www.overthewire.org/wargames

bandit18@bandit.labs.overthewire.org's password:
Permission denied, please try again.
bandit18@bandit.labs.overthewire.org's password:
IueksS7Ubh8G3DCwVzrTd8rAVOwq3M5x
*** IueksS7Ubh8G3DCwVzrTd8rAVOwq3M5x
** Level 19
*** Level Goal

To gain access to the next level, you should use the setuid binary in the homedirectory. Execute it without arguments to find out how to use it. The password for this level can be found in the usual place (/etc/bandit_pass), after you have used the setuid binary.
*** Helpful Reading Material

    setuid on Wikipedia

*** Write-up
bandit19@bandit:~$ ls
bandit20-do
bandit19@bandit:~$ ls -al
total 28
drwxr-xr-x  2 root     root     4096 May  7  2020 .
drwxr-xr-x 41 root     root     4096 May  7  2020 ..
-rwsr-x---  1 bandit20 bandit19 7296 May  7  2020 bandit20-do
-rw-r--r--  1 root     root      220 May 15  2017 .bash_logout
-rw-r--r--  1 root     root     3526 May 15  2017 .bashrc
-rw-r--r--  1 root     root      675 May 15  2017 .profile
bandit19@bandit:~$ man ls
bandit19@bandit:~$ man setuid
bandit19@bandit:~$ setuid
-bash: setuid: command not found
bandit19@bandit:~$ setuid bandot20
-bash: setuid: command not found
bandit19@bandit:~$ setuid bandit20
-bash: setuid: command not found
bandit19@bandit:~$ file bandit20-do
bandit20-do: setuid ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux.so.2, for GNU/Linux 2.6.32, BuildID[sha1]=8e941f24b8c5cd0af67b22b724c57e1ab92a92a1, not stripped
bandit19@bandit:~$ ./bandit20-do
Run a command as another user.
  Example: ./bandit20-do id
bandit19@bandit:~$ ./bandit20-do id
uid=11019(bandit19) gid=11019(bandit19) euid=11020(bandit20) groups=11019(bandit19)
bandit19@bandit:~$ ls -lh /etc/bandit_pass/bandit20
-r-------- 1 bandit20 bandit20 33 May  7  2020 /etc/bandit_pass/bandit20
bandit19@bandit:~$ cat !$
cat /etc/bandit_pass/bandit20
cat: /etc/bandit_pass/bandit20: Permission denied
bandit19@bandit:~$ ./bandit20-do cat !$
./bandit20-do cat /etc/bandit_pass/bandit20
GbKksEFF4yrVs6il55v6gwY5aVje5f0j
*** GbKksEFF4yrVs6il55v6gwY5aVje5f0j
** Level 20

*** Level Goal

There is a setuid binary in the homedirectory that does the following: it makes a connection to localhost on the port you specify as a commandline argument. It then reads a line of text from the connection and compares it to the password in the previous level (bandit20). If the password is correct, it will transmit the password for the next level (bandit21).

NOTE: Try connecting to your own network daemon to see if it works as you think
*** Commands you may need to solve this level

ssh, nc, cat, bash, screen, tmux, Unix ‘job control’ (bg, fg, jobs, &, CTRL-Z, …)
*** Writeup
bandit20@bandit:~$ ./suconnect
Usage: ./suconnect <portnumber>
This program will connect to the given port on localhost using TCP. If it receives the correct password from the other side, the next password is transmitted back.
bandit20@bandit:~$ nmap -A -sV -T5 localhost

Starting Nmap 7.40 ( https://nmap.org ) at 2022-02-23 19:47 CET
Nmap scan report for localhost (127.0.0.1)
Host is up (0.00023s latency).
Not shown: 997 closed ports
PORT      STATE SERVICE VERSION
22/tcp    open  ssh     OpenSSH 7.4p1 (protocol 2.0)
| ssh-hostkey:
|   2048 0f:b3:a9:49:cc:50:3e:72:98:aa:10:fb:33:12:72:c4 (RSA)
|_  256 0a:89:2a:f1:2e:2f:df:66:3e:fe:bb:49:10:1a:96:32 (ECDSA)
113/tcp   open  ident
30000/tcp open  ndmps?
| fingerprint-strings:
|   FourOhFourRequest, GenericLines, GetRequest, HTTPOptions, Help, Kerberos, LDAPSearchReq, LPDString, RTSPRequest, SIPOptions, SSLSessionReq, TLSSessionReq:
|_    Wrong! Please enter the correct current password
1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :
SF-Port30000-TCP:V=7.40%I=7%D=2/23%Time=62168152%P=x86_64-pc-linux-gnu%r(G
SF:enericLines,31,"Wrong!\x20Please\x20enter\x20the\x20correct\x20current\
SF:x20password\n")%r(GetRequest,31,"Wrong!\x20Please\x20enter\x20the\x20co
SF:rrect\x20current\x20password\n")%r(HTTPOptions,31,"Wrong!\x20Please\x20
SF:enter\x20the\x20correct\x20current\x20password\n")%r(RTSPRequest,31,"Wr
SF:ong!\x20Please\x20enter\x20the\x20correct\x20current\x20password\n")%r(
SF:Help,31,"Wrong!\x20Please\x20enter\x20the\x20correct\x20current\x20pass
SF:word\n")%r(SSLSessionReq,31,"Wrong!\x20Please\x20enter\x20the\x20correc
SF:t\x20current\x20password\n")%r(TLSSessionReq,31,"Wrong!\x20Please\x20en
SF:ter\x20the\x20correct\x20current\x20password\n")%r(Kerberos,31,"Wrong!\
SF:x20Please\x20enter\x20the\x20correct\x20current\x20password\n")%r(FourO
SF:hFourRequest,31,"Wrong!\x20Please\x20enter\x20the\x20correct\x20current
SF:\x20password\n")%r(LPDString,31,"Wrong!\x20Please\x20enter\x20the\x20co
SF:rrect\x20current\x20password\n")%r(LDAPSearchReq,31,"Wrong!\x20Please\x
SF:20enter\x20the\x20correct\x20current\x20password\n")%r(SIPOptions,31,"W
SF:rong!\x20Please\x20enter\x20the\x20correct\x20current\x20password\n");

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 82.66 seconds

- after you run the nc command, paste the level 20 password into the terminal and press enter
bandit20@bandit:~$ nc -nlvp 6969
listening on [any] 6969 ...
GbKksEFF4yrVs6il55v6gwY5aVje5f0j
connect to [127.0.0.1] from (UNKNOWN) [127.0.0.1] 33874
gE269g2h3mw3pwgrj0Ha9Uoqen1c9DGr
bandit20@bandit:~$
- then run this and you get the level 21 password back in the netcat terminal
bandit20@bandit:~$ ./suconnect 6969
Read: GbKksEFF4yrVs6il55v6gwY5aVje5f0j
Password matches, sending next password
*** gE269g2h3mw3pwgrj0Ha9Uoqen1c9DGr
** Level 21
*** Level Goal

A program is running automatically at regular intervals from cron, the time-based job scheduler. Look in /etc/cron.d/ for the configuration and see what command is being executed.
*** Commands you may need to solve this level

cron, crontab, crontab(5) (use “man 5 crontab” to access this)
*** Writeup
    bandit21@bandit:~$ cd /etc/cron.d
    bandit21@bandit:/etc/cron.d$ ls
    cronjob_bandit15_root  cronjob_bandit22  cronjob_bandit24
    cronjob_bandit17_root  cronjob_bandit23  cronjob_bandit25_root

    bandit21@bandit:/etc/cron.d$ cat cronjob_bandit22
    @reboot bandit22 /usr/bin/cronjob_bandit22.sh &> /dev/null
****** * * * * bandit22 /usr/bin/cronjob_bandit22.sh &> /dev/null

        bandit21@bandit:/usr/bin$ cat cronjob_bandit22.sh
#!/bin/bash
chmod 644 /tmp/t7O6lds9S0RqQh9aMcz6ShpAoZKF7fgv
cat /etc/bandit_pass/bandit22 > /tmp/t7O6lds9S0RqQh9aMcz6ShpAoZKF7fgv



bandit21@bandit:/usr/bin$ cat cronjob_bandit22.sh
#!/bin/bash
chmod 644 /tmp/t7O6lds9S0RqQh9aMcz6ShpAoZKF7fgv
cat /etc/bandit_pass/bandit22 > /tmp/t7O6lds9S0RqQh9aMcz6ShpAoZKF7fgv
bandit21@bandit:/usr/bin$ cat /etc/bandit_pass/bandit22
cat: /etc/bandit_pass/bandit22: Permission denied
bandit21@bandit:/usr/bin$ cat /tmp/t7O6lds9S0RqQh9aMcz6ShpAoZKF7fgv
Yk7owGAcWjwMVRwrTesJEwB7WVOiILLI

*** Yk7owGAcWjwMVRwrTesJEwB7WVOiILLI
** Level 22
*** Level Goal
A program is running automatically at regular intervals from cron, the time-based job scheduler. Look in /etc/cron.d/ for the configuration and see what command is being executed.

NOTE: Looking at shell scripts written by other people is a very useful skill. The script for this level is intentionally made easy to read. If you are having problems understanding what it does, try executing it to see the debug information it prints.
*** Commands you may need to solve this level

cron, crontab, crontab(5) (use “man 5 crontab” to access this)
*** Writeup
bandit22@bandit:~$ cd /etc/cron.d
bandit22@bandit:/etc/cron.d$ ls
cronjob_bandit15_root  cronjob_bandit22  cronjob_bandit24
cronjob_bandit17_root  cronjob_bandit23  cronjob_bandit25_root

bandit22@bandit:/etc/cron.d$ cat cronjob_bandit23
@reboot bandit23 /usr/bin/cronjob_bandit23.sh  &> /dev/null
 * * * * bandit23 /usr/bin/cronjob_bandit23.sh  &> /dev/null
bandit22@bandit:/etc/cron.d$ cat /usr/bin/cronjob_bandit23.sh
#!/bin/bash

myname=$(whoami)
mytarget=$(echo I am user $myname | md5sum | cut -d ' ' -f 1)

echo "Copying passwordfile /etc/bandit_pass/$myname to /tmp/$mytarget"

cat /etc/bandit_pass/$myname > /tmp/$mytarget
bandit22@bandit:/etc/cron.d$ ls /tmp
ls: cannot open directory '/tmp': Permission denied
bandit22@bandit:/etc/cron.d$ cd /usr/bin
bandit22@bandit:/usr/bin$ ./cronjob_bandit23.sh
Copying passwordfile /etc/bandit_pass/bandit22 to /tmp/8169b67bd894ddbb4412f91573b38db3
bandit22@bandit:/usr/bin$ cat /tmp/8169b67bd894ddbb4412f91573b38db3
Yk7owGAcWjwMVRwrTesJEwB7WVOiILLI

bandit22@bandit:/usr/bin$ echo I am user bandit23 | md5sum | cut -d ' ' -f 1
8ca319486bfbbc3663ea0fbe81326349
bandit22@bandit:/usr/bin$ cat /tmp/8ca319486bfbbc3663ea0fbe81326349
jc1udXuA1tiHqjIsL8yaapX5XIAI6i0n
*** jc1udXuA1tiHqjIsL8yaapX5XIAI6i0n


** Level 23
*** Level Goal

A program is running automatically at regular intervals from cron, the time-based job scheduler. Look in /etc/cron.d/ for the configuration and see what command is being executed.

NOTE: This level requires you to create your own first shell-script. This is a very big step and you should be proud of yourself when you beat this level!

NOTE 2: Keep in mind that your shell script is removed once executed, so you may want to keep a copy around…
*** Commands you may need to solve this level

cron, crontab, crontab(5) (use “man 5 crontab” to access this)

*** Writeup
